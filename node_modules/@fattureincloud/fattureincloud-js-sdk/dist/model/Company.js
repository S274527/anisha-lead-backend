"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _CompanyType = _interopRequireDefault(require("./CompanyType"));
var _ControlledCompany = _interopRequireDefault(require("./ControlledCompany"));
var _FattureInCloudPlanType = _interopRequireDefault(require("./FattureInCloudPlanType"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.32
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The Company model module.
 * @module model/Company
 * @version 2.0.25
 */
var Company = /*#__PURE__*/function () {
  /**
     * Constructs a new <code>Company</code>.
     * @alias module:model/Company
     */
  function Company() {
    _classCallCheck(this, Company);
    Company.initialize(this);
  }

  /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
  _createClass(Company, null, [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
       * Constructs a <code>Company</code> from a plain JavaScript object, optionally creating a new instance.
       * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
       * @param {Object} data The plain JavaScript object bearing properties of interest.
       * @param {module:model/Company} obj Optional instance to populate.
       * @return {module:model/Company} The populated <code>Company</code> instance.
       */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new Company();
        if (data.hasOwnProperty('id')) {
          obj.id = _ApiClient["default"].convertToType(data.id, 'Number');
        }
        if (data.hasOwnProperty('name')) {
          obj.name = _ApiClient["default"].convertToType(data.name, 'String');
        }
        if (data.hasOwnProperty('type')) {
          obj.type = _CompanyType["default"].constructFromObject(data.type);
        }
        if (data.hasOwnProperty('access_token')) {
          obj.access_token = _ApiClient["default"].convertToType(data.access_token, 'String');
        }
        if (data.hasOwnProperty('controlled_companies')) {
          obj.controlled_companies = _ApiClient["default"].convertToType(data.controlled_companies, [_ControlledCompany["default"]]);
        }
        if (data.hasOwnProperty('fic_license_expire')) {
          obj.fic_license_expire = _ApiClient["default"].convertToType(data.fic_license_expire, 'Date');
        }
        if (data.hasOwnProperty('fic_plan')) {
          obj.fic_plan = _FattureInCloudPlanType["default"].constructFromObject(data.fic_plan);
        }
        if (data.hasOwnProperty('connection_id')) {
          obj.connection_id = _ApiClient["default"].convertToType(data.connection_id, 'Number');
        }
        if (data.hasOwnProperty('tax_code')) {
          obj.tax_code = _ApiClient["default"].convertToType(data.tax_code, 'String');
        }
      }
      return obj;
    }

    /**
       * Validates the JSON data with respect to <code>Company</code>.
       * @param {Object} data The plain JavaScript object bearing properties of interest.
       * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Company</code>.
       */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is a string
      if (data.name && !(typeof data.name === 'string' || data.name instanceof String)) {
        throw new Error('Expected the field `name` to be a primitive type in the JSON string but got ' + data.name);
      }
      // ensure the json data is a string
      if (data.access_token && !(typeof data.access_token === 'string' || data.access_token instanceof String)) {
        throw new Error('Expected the field `access_token` to be a primitive type in the JSON string but got ' + data.access_token);
      }
      if (data.controlled_companies) {
        // data not null
        // ensure the json data is an array
        if (!Array.isArray(data.controlled_companies)) {
          throw new Error('Expected the field `controlled_companies` to be an array in the JSON data but got ' + data.controlled_companies);
        }
        // validate the optional field `controlled_companies` (array)
        var _iterator = _createForOfIteratorHelper(data.controlled_companies),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var item = _step.value;
            _ControlledCompany["default"].validateJSON(item);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      // ensure the json data is a string
      if (data.tax_code && !(typeof data.tax_code === 'string' || data.tax_code instanceof String)) {
        throw new Error('Expected the field `tax_code` to be a primitive type in the JSON string but got ' + data.tax_code);
      }
      return true;
    }
  }]);
  return Company;
}();
/**
 * Company id
 * @member {Number} id
 */
Company.prototype.id = undefined;

/**
 * Company name
 * @member {String} name
 */
Company.prototype.name = undefined;

/**
 * @member {module:model/CompanyType} type
 */
Company.prototype.type = undefined;

/**
 * Company authentication token for this company. [Only if type=company]
 * @member {String} access_token
 */
Company.prototype.access_token = undefined;

/**
 * Company list of controlled companies [Only if type=accountant]
 * @member {Array.<module:model/ControlledCompany>} controlled_companies
 */
Company.prototype.controlled_companies = undefined;

/**
 * @member {Date} fic_license_expire
 */
Company.prototype.fic_license_expire = undefined;

/**
 * @member {module:model/FattureInCloudPlanType} fic_plan
 */
Company.prototype.fic_plan = undefined;

/**
 * Company connection id
 * @member {Number} connection_id
 */
Company.prototype.connection_id = undefined;

/**
 * Company tax code
 * @member {String} tax_code
 */
Company.prototype.tax_code = undefined;
var _default = exports["default"] = Company;