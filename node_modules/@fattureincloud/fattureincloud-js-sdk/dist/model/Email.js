"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _EmailAttachment = _interopRequireDefault(require("./EmailAttachment"));
var _EmailRecipientStatus = _interopRequireDefault(require("./EmailRecipientStatus"));
var _EmailStatus = _interopRequireDefault(require("./EmailStatus"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.32
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The Email model module.
 * @module model/Email
 * @version 2.0.25
 */
var Email = /*#__PURE__*/function () {
  /**
     * Constructs a new <code>Email</code>.
     * @alias module:model/Email
     */
  function Email() {
    _classCallCheck(this, Email);
    Email.initialize(this);
  }

  /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
  _createClass(Email, null, [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
       * Constructs a <code>Email</code> from a plain JavaScript object, optionally creating a new instance.
       * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
       * @param {Object} data The plain JavaScript object bearing properties of interest.
       * @param {module:model/Email} obj Optional instance to populate.
       * @return {module:model/Email} The populated <code>Email</code> instance.
       */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new Email();
        if (data.hasOwnProperty('id')) {
          obj.id = _ApiClient["default"].convertToType(data.id, 'Number');
        }
        if (data.hasOwnProperty('status')) {
          obj.status = _EmailStatus["default"].constructFromObject(data.status);
        }
        if (data.hasOwnProperty('sent_date')) {
          obj.sent_date = _ApiClient["default"].convertToType(data.sent_date, 'Date');
        }
        if (data.hasOwnProperty('errors_count')) {
          obj.errors_count = _ApiClient["default"].convertToType(data.errors_count, 'Number');
        }
        if (data.hasOwnProperty('error_log')) {
          obj.error_log = _ApiClient["default"].convertToType(data.error_log, 'String');
        }
        if (data.hasOwnProperty('from_email')) {
          obj.from_email = _ApiClient["default"].convertToType(data.from_email, 'String');
        }
        if (data.hasOwnProperty('from_name')) {
          obj.from_name = _ApiClient["default"].convertToType(data.from_name, 'String');
        }
        if (data.hasOwnProperty('to_email')) {
          obj.to_email = _ApiClient["default"].convertToType(data.to_email, 'String');
        }
        if (data.hasOwnProperty('to_name')) {
          obj.to_name = _ApiClient["default"].convertToType(data.to_name, 'String');
        }
        if (data.hasOwnProperty('subject')) {
          obj.subject = _ApiClient["default"].convertToType(data.subject, 'String');
        }
        if (data.hasOwnProperty('content')) {
          obj.content = _ApiClient["default"].convertToType(data.content, 'String');
        }
        if (data.hasOwnProperty('copy_to')) {
          obj.copy_to = _ApiClient["default"].convertToType(data.copy_to, 'String');
        }
        if (data.hasOwnProperty('recipient_status')) {
          obj.recipient_status = _EmailRecipientStatus["default"].constructFromObject(data.recipient_status);
        }
        if (data.hasOwnProperty('recipient_date')) {
          obj.recipient_date = _ApiClient["default"].convertToType(data.recipient_date, 'Date');
        }
        if (data.hasOwnProperty('kind')) {
          obj.kind = _ApiClient["default"].convertToType(data.kind, 'String');
        }
        if (data.hasOwnProperty('attachments')) {
          obj.attachments = _ApiClient["default"].convertToType(data.attachments, [_EmailAttachment["default"]]);
        }
      }
      return obj;
    }

    /**
       * Validates the JSON data with respect to <code>Email</code>.
       * @param {Object} data The plain JavaScript object bearing properties of interest.
       * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Email</code>.
       */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is a string
      if (data.error_log && !(typeof data.error_log === 'string' || data.error_log instanceof String)) {
        throw new Error('Expected the field `error_log` to be a primitive type in the JSON string but got ' + data.error_log);
      }
      // ensure the json data is a string
      if (data.from_email && !(typeof data.from_email === 'string' || data.from_email instanceof String)) {
        throw new Error('Expected the field `from_email` to be a primitive type in the JSON string but got ' + data.from_email);
      }
      // ensure the json data is a string
      if (data.from_name && !(typeof data.from_name === 'string' || data.from_name instanceof String)) {
        throw new Error('Expected the field `from_name` to be a primitive type in the JSON string but got ' + data.from_name);
      }
      // ensure the json data is a string
      if (data.to_email && !(typeof data.to_email === 'string' || data.to_email instanceof String)) {
        throw new Error('Expected the field `to_email` to be a primitive type in the JSON string but got ' + data.to_email);
      }
      // ensure the json data is a string
      if (data.to_name && !(typeof data.to_name === 'string' || data.to_name instanceof String)) {
        throw new Error('Expected the field `to_name` to be a primitive type in the JSON string but got ' + data.to_name);
      }
      // ensure the json data is a string
      if (data.subject && !(typeof data.subject === 'string' || data.subject instanceof String)) {
        throw new Error('Expected the field `subject` to be a primitive type in the JSON string but got ' + data.subject);
      }
      // ensure the json data is a string
      if (data.content && !(typeof data.content === 'string' || data.content instanceof String)) {
        throw new Error('Expected the field `content` to be a primitive type in the JSON string but got ' + data.content);
      }
      // ensure the json data is a string
      if (data.copy_to && !(typeof data.copy_to === 'string' || data.copy_to instanceof String)) {
        throw new Error('Expected the field `copy_to` to be a primitive type in the JSON string but got ' + data.copy_to);
      }
      // ensure the json data is a string
      if (data.kind && !(typeof data.kind === 'string' || data.kind instanceof String)) {
        throw new Error('Expected the field `kind` to be a primitive type in the JSON string but got ' + data.kind);
      }
      if (data.attachments) {
        // data not null
        // ensure the json data is an array
        if (!Array.isArray(data.attachments)) {
          throw new Error('Expected the field `attachments` to be an array in the JSON data but got ' + data.attachments);
        }
        // validate the optional field `attachments` (array)
        var _iterator = _createForOfIteratorHelper(data.attachments),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var item = _step.value;
            _EmailAttachment["default"].validateJSON(item);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      return true;
    }
  }]);
  return Email;
}();
/**
 * Email id
 * @member {Number} id
 */
Email.prototype.id = undefined;

/**
 * @member {module:model/EmailStatus} status
 */
Email.prototype.status = undefined;

/**
 * Email sent date
 * @member {Date} sent_date
 */
Email.prototype.sent_date = undefined;

/**
 * Email errors count
 * @member {Number} errors_count
 */
Email.prototype.errors_count = undefined;

/**
 * Email errors log
 * @member {String} error_log
 */
Email.prototype.error_log = undefined;

/**
 * Email sender email
 * @member {String} from_email
 */
Email.prototype.from_email = undefined;

/**
 * Email sender name
 * @member {String} from_name
 */
Email.prototype.from_name = undefined;

/**
 * Email recipient email
 * @member {String} to_email
 */
Email.prototype.to_email = undefined;

/**
 * Email receipient name
 * @member {String} to_name
 */
Email.prototype.to_name = undefined;

/**
 * Email subject
 * @member {String} subject
 */
Email.prototype.subject = undefined;

/**
 * Email content
 * @member {String} content
 */
Email.prototype.content = undefined;

/**
 * Email cc
 * @member {String} copy_to
 */
Email.prototype.copy_to = undefined;

/**
 * @member {module:model/EmailRecipientStatus} recipient_status
 */
Email.prototype.recipient_status = undefined;

/**
 * Email recipient date
 * @member {Date} recipient_date
 */
Email.prototype.recipient_date = undefined;

/**
 * Email kind
 * @member {String} kind
 */
Email.prototype.kind = undefined;

/**
 * Email attachments
 * @member {Array.<module:model/EmailAttachment>} attachments
 */
Email.prototype.attachments = undefined;
var _default = exports["default"] = Email;